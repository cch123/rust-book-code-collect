service: rust-sls
provider:
  name: aws
  runtime: rust
  memorySize: 128

package:
  individually: true

plugins:
  - serverless-rust
  - serverless-finch

functions:
  lambda_1:
    handler: lambda_1
    role: RustSlsLambdaRole
    events:
      - http:
          path: ride
          method: post
          cors: true
          authorizer:
            type: COGNITO_USER_POOLS
            authorizerId:
              Ref: RustSlsApiGatewayAuthorizer
  lambda_2:
    handler: lambda_2
    events:
      - http:
          path: check
          method: get

resources:
  Resources:
    RustSlsBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: rust-sls-aws
        WebsiteConfiguration:
          IndexDocument: index.html
    RustSlsBucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket:
          Ref: "RustSlsBucket"
        PolicyDocument:
          Statement:
            -
              Effect: "Allow"
              Principal: "*"
              Action:
                - "s3:GetObject"
              Resource:
                Fn::Join:
                  - ""
                  -
                    - "arn:aws:s3:::"
                    -
                      Ref: "RustSlsBucket"
                    - "/*"
    RustSlsCognitoUserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: RustSls
        UsernameAttributes:
          - email
        AutoVerifiedAttributes:
          - email
    RustSlsCognitoUserPoolClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName: RustSlsWebApp
        GenerateSecret: false
        UserPoolId:
          Ref: "RustSlsCognitoUserPool"
    RustSlsDynamoDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Rides
        AttributeDefinitions:
          - AttributeName: RideId
            AttributeType: S
        KeySchema:
          - AttributeName: RideId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    RustSlsLambdaRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: RustSlsLambda
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: DynamoDBWriteAccess
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                  Resource:
                    - 'Fn::Join':
                      - ':'
                      -
                        - 'arn:aws:logs'
                        - Ref: 'AWS::Region'
                        - Ref: 'AWS::AccountId'
                        - 'log-group:/aws/lambda/*:*:*'
                - Effect: Allow
                  Action:
                    - dynamodb:PutItem
                  Resource:
                    'Fn::GetAtt': [ RustSlsDynamoDBTable, Arn ]
    RustSlsApiGatewayAuthorizer:
      Type: AWS::ApiGateway::Authorizer
      Properties:
        Name: RustSls
        RestApiId:
          Ref: ApiGatewayRestApi
        Type: COGNITO_USER_POOLS
        ProviderARNs:
          - Fn::GetAtt: [ RustSlsCognitoUserPool, Arn ]
        IdentitySource: method.request.header.Authorization
  Outputs:
    RustSlsBucketURL:
      Description: "RustSls Bucket Website URL"
      Value:
        "Fn::GetAtt": [ RustSlsBucket, WebsiteURL ]
    RustSlsCognitoUserPoolId:
      Description: "RustSls Cognito User Pool ID"
      Value:
        Ref: "RustSlsCognitoUserPool"
    RustSlsCognitoUserPoolClientId:
      Description: "RustSls Cognito User Pool Client ID"
      Value:
        Ref: "RustSlsCognitoUserPoolClient"
    RustSlsDynamoDbARN:
      Description: "RustSls DynamoDB ARN"
      Value:
        "Fn::GetAtt": [ RustSlsDynamoDBTable, Arn ]

custom:
  client:
    bucketName: rust-sls-aws
    distributionFolder: assets
